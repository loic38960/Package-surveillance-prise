# packages/surveillance_prises_zigbee.yaml
# üì¶ Package : Surveillance des prises Zigbee
# Auteur : [loic38100]
# Version : 1.0
# Description :
#   - Alerte si une prise est KO (off/unavailable/unknown)
#   - Notification de retour OK
#   - Rapport quotidien (22h)
#   - V√©rif p√©riodique (toutes les 5 min)
#   - V√©rif au d√©marrage (m√™me si d√©j√† KO)
homeassistant:
  customize: {}

group:
  prises_zigbee:
    name: "Prises Zigbee surveill√©es"
    entities:
      - switch.refrigerateur
      - switch.cav
      - switch.congelateur

template:
  - binary_sensor:
      - name: "Prises Zigbee - √âtat global"
        unique_id: prises_zigbee_etat_global
        icon: mdi:power-plug
        state: >
          {% set membres = expand('group.prises_zigbee') | list %}
          {% if not membres %}
            false
          {% else %}
            {{ membres | selectattr('state','in',['off','unavailable','unknown']) | list | count == 0 }}
          {% endif %}

automation:
  # 1) Alerte si au moins UNE prise est off/unavailable/unknown ‚â• 5 min
  - id: alerte_prises_zigbee_probleme
    alias: "Alerte | Prises Zigbee en anomalie"
    mode: single
    trigger:
      - platform: template
        value_template: >
          {{ expand('group.prises_zigbee')
             | selectattr('state','in',['off','unavailable','unknown'])
             | list | count > 0 }}
        for: "00:05:00"
    action:
      - service: script.notifier_mogo_loic
        data:
          title: "‚ö†Ô∏è Prise Zigbee en anomalie"
          message: >
            {% for e in expand('group.prises_zigbee') if e.state in ['off','unavailable','unknown'] -%}
            ‚ö†Ô∏è {{ e.name }} n'est plus aliment√©
            {% endfor %}

  # 2) Message de r√©tablissement quand tout redevient OK (‚â• 2 min)
  - id: info_prises_zigbee_retablies
    alias: "Info | Prises Zigbee r√©tablies"
    mode: single
    trigger:
      - platform: template
        value_template: >
          {{ expand('group.prises_zigbee')
             | selectattr('state','in',['off','unavailable','unknown'])
             | list | count == 0 }}
        for: "00:02:00"
    action:
      - service: script.notifier_mogo_loic
        data:
          title: "‚úÖ Prises Zigbee OK"
          message: "Toutes les prises surveill√©es sont revenues √† l'√©tat normal depuis 2 minutes."

  # 3) Rapport quotidien √† 22:00
  - id: rapport_quotidien_prises_zigbee
    alias: "Rapport quotidien | Prises Zigbee"
    mode: single
    trigger:
      - platform: time
        at: "22:00:00"
    variables:
      defauts: >
        {{ expand('group.prises_zigbee')
           | selectattr('state','in',['off','unavailable','unknown'])
           | map(attribute='name') | list }}
      resume: >
        {% for e in expand('group.prises_zigbee') -%}
        {{ '\n' -}}‚Ä¢ {{ e.name }} ‚Üí {{ e.state }}
        {%- endfor %}
    action:
      - service: script.notifier_mogo_loic
        data:
          title: "üìù Rapport prises Zigbee (22:00)"
          message: >
            {{ '‚úÖ Aucune anomalie d√©tect√©e.' if defauts | count == 0
               else '‚ö†Ô∏è Anomalies : ' ~ (defauts | join(', ')) }}
            {{ '\n\n√âtat d√©taill√© :' ~ resume }}

  # 4) V√©rification p√©riodique (toutes les 5 min) - imm√©diate
  - id: verif_periodique_prises_zigbee_5min
    alias: "V√©rif p√©riodique | Prises Zigbee (toutes les 5 min)"
    mode: single
    trigger:
      - platform: time_pattern
        minutes: "/5"

    condition:
      - condition: template
        value_template: >
          {{ expand('group.prises_zigbee')
             | selectattr('state','in',['off','unavailable','unknown'])
             | list | count > 0 }}

#    action:
#      - service: persistent_notification.create
#        data:
#          title: "DEBUG V√©rif p√©riodique Zigbee"
#          message: >
#            {% set defauts = expand('group.prises_zigbee')
#               | selectattr('state','in',['off','unavailable','unknown'])
#               | list %}
#            D√©tections :
#            {% for e in defauts -%}
#            \n‚Ä¢ {{ e.name }} ({{ e.entity_id }})
#            {% endfor %}

      - service: script.notifier_mogo_loic
        data:
          title: "‚ö†Ô∏è V√©rification p√©riodique"
          message: >
            {% set defauts = expand('group.prises_zigbee')
               | selectattr('state','in',['off','unavailable','unknown'])
               | list %}
            {% for e in defauts -%}
            ‚ö†Ô∏è {{ e.name }} n'est plus aliment√©
            {% endfor %}

  # 5) V√©rif au d√©marrage (notification m√™me si d√©j√† KO)
  - id: verif_demarrage_prises_zigbee
    alias: "V√©rif au d√©marrage | Prises Zigbee"
    mode: single
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay: "00:01:30"  # ou "00:05:00" si tu pr√©f√®res attendre 5 min
      - variables:
          en_defaut: >
            {% set membres = expand('group.prises_zigbee') %}
            {% set defauts = [] %}
            {% for e in membres if e.state in ['off','unavailable','unknown'] %}
              {% set _ = defauts.append(e) %}
            {% endfor %}
            {{ defauts }}
      - condition: template
        value_template: "{{ en_defaut | count > 0 }}"
      - service: script.notifier_mogo_loic
        data:
          title: "‚ö†Ô∏è D√©marrage HA : anomalie prise Zigbee"
          message: >
            {% for e in en_defaut -%}
            ‚ö†Ô∏è {{ e.name }} n'est plus aliment√©
            {% endfor %}
